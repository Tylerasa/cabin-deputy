name: AI Code Review
on:
  issue_comment:
    types: [created]

jobs:
  ai-review:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '@agent please review this PR')
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: write
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Get PR details
        id: pr-details
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Claude Code CLI
        run: |
          npm install -g @anthropic-ai/claude-code
          
      - name: Setup Claude Code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Configure Claude Code with API key
          echo "$ANTHROPIC_API_KEY" | claude auth login --api-key
          
      - name: Get changed files for PR
        id: changed-files
        run: |
          # Get list of changed files in the PR
          gh api repos/${{ github.repository }}/pulls/${{ steps.pr-details.outputs.pr_number }}/files \
            --jq '.[].filename' > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run Claude Code Review
        id: claude-review
        run: |
          # Create a comprehensive review prompt
          echo "Please review this Pull Request. I'm working on a Next.js/TypeScript project with Puppeteer image generation features.
          
          Focus on:
          🔒 Security - API keys, input validation, XSS, SQL injection
          ⚡ Performance - Bundle size, React rendering, database queries  
          🏗️ Code Quality - TypeScript best practices, maintainability
          🛡️ Type Safety - Proper typing, null checks, any types
          🧪 Testing - Missing coverage, edge cases
          📝 Documentation - JSDoc, README updates
          🎯 Next.js/React - SSR/SSG, React patterns, accessibility
          
          Be constructive and specific about improvements. If code looks good, mention what's done well.
          
          Files changed in this PR:" > review_prompt.txt
          
          cat changed_files.txt >> review_prompt.txt
          
          # Run Claude Code on the changed files
          if [ -s changed_files.txt ]; then
            # Review each changed file
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                echo "Reviewing: $file" >> review_prompt.txt
                echo "\`\`\`" >> review_prompt.txt
                cat "$file" >> review_prompt.txt
                echo "\`\`\`" >> review_prompt.txt
                echo "" >> review_prompt.txt
              fi
            done < changed_files.txt
            
            # Get Claude's review
            claude chat --file review_prompt.txt --output review_output.md
          else
            echo "No files to review" > review_output.md
          fi
          
      - name: Post Review Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Format the review for GitHub
          echo "## 🤖 Claude Code Review" > formatted_review.md
          echo "" >> formatted_review.md
          cat review_output.md >> formatted_review.md
          echo "" >> formatted_review.md
          echo "---" >> formatted_review.md
          echo "*This review was generated by [Claude Code](https://claude.ai/code). Comment \`@agent please review this PR\` to trigger a new review.*" >> formatted_review.md
          
          # Post the review as a comment
          gh pr comment ${{ steps.pr-details.outputs.pr_number }} --body-file formatted_review.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}